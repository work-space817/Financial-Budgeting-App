{"version":3,"sources":["components/containers/CropperComponent/CropperComponent.tsx","components/containers/CropperComponent/CropperComponent.module.css","components/Categories/CreateCategory/validation.ts","components/Categories/CreateCategory/CreateCategory.tsx"],"names":["CropperComponent","onChange","field","error","touched","value","aspectRatio","useState","img","setImg","cropperObj","setCropperObj","imgRef","useRef","prevRef","base64","setBase64","showModal","setShowModal","handleImageChange","e","file","target","files","url","URL","createObjectURL","replace","useEffect","current","cropper","Cropper","viewMode","preview","className","classes","formGroup","htmlFor","style","height","width","classNames","labelInput","bgImg","src","alt","id","type","onClose","modalBody","image","ref","border","overflow","onClick","rotate","icon","faSync","size","base","getCroppedCanvas","toDataURL","faCheckCircle","faTimesCircle","module","exports","CreateCategorySchema","yup","title","required","urlSlug","priority","CreateCategory","useActions","addFlashMessage","deleteFlashMessage","loading","useTypedSelector","store","userCrud","load","setLoad","navigator","useNavigate","onHandleSubmit","values","setFieldError","res","console","log","result","status","message","setTimeout","serverErrors","length","formik","useFormik","initialValues","validationSchema","onSubmit","errors","handleChange","handleSubmit","setFieldValue","Helmet","InputGroup","label","disabled"],"mappings":"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","file":"static/js/15.a4f3d479.chunk.js","sourcesContent":["import Cropper from \"cropperjs\";\r\nimport { LegacyRef, useEffect, useRef, useState } from \"react\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport classes from \"./CropperComponent.module.css\";\r\n\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport classNames from \"classnames\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSync,\r\n  faCheckCircle,\r\n  faTimesCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport interface IGetCropperProps {\r\n  onChange: (field: string, value: string) => void;\r\n  field: string;\r\n  value?: string;\r\n  error?: string;\r\n  touched?: boolean;\r\n  aspectRatio?: number;\r\n}\r\n\r\nconst CropperComponent: React.FC<IGetCropperProps> = ({\r\n  onChange,\r\n  field,\r\n  error,\r\n  touched,\r\n  value,\r\n  aspectRatio = 16 / 9,\r\n}) => {\r\n  const [img, setImg] = useState<string>(value as string);\r\n  const [cropperObj, setCropperObj] = useState<Cropper>();\r\n  const imgRef = useRef<HTMLImageElement>(null);\r\n  const prevRef = useRef<HTMLDivElement>();\r\n  const [base64, setBase64] = useState<any>();\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleImageChange = async (e: any) => {\r\n    const file = (e.target.files as FileList)[0];\r\n    if (file) {\r\n      const url = URL.createObjectURL(file);\r\n      await setImg(url);\r\n      cropperObj?.replace(url);\r\n      setShowModal(true);\r\n    }\r\n    e.target.value = \"\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (imgRef.current) {\r\n      const cropper = new Cropper(imgRef.current as HTMLImageElement, {\r\n        aspectRatio: aspectRatio,\r\n        viewMode: 1,\r\n        preview: prevRef.current,\r\n      });\r\n      cropper.replace(img);\r\n      setCropperObj(cropper);\r\n    }\r\n  }, [showModal, img, aspectRatio]);\r\n\r\n  const rotateImg = () => {\r\n    if (imgRef.current) {\r\n      cropperObj?.rotate(90);\r\n    }\r\n  };\r\n\r\n  const getBase64 = () => {\r\n    const base = cropperObj?.getCroppedCanvas().toDataURL() as string;\r\n    setBase64(base);\r\n    setShowModal(false);\r\n    onChange(field as string, base);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={classes.formGroup}>\r\n        <label htmlFor={field} style={{ height: \"100%\", width: \"100%\" }}>\r\n          <div\r\n            className={classNames(\r\n              classes.labelInput,\r\n              { \"text-danger border border-danger rounded\": touched && error },\r\n              { \"is-valid border border-success rounded\": touched && !error }\r\n            )}\r\n          >\r\n            {base64 && (\r\n              <img className={classes.bgImg} src={base64} alt=\"asdas\" />\r\n            )}\r\n            {!base64 && (\r\n              <>\r\n                {value && (\r\n                  <img style={{ width: \"100%\" }} src={value} alt=\"asdasda\" />\r\n                )}\r\n                {!value && (\r\n                  <>\r\n                    <i className=\"fa fa-image fa-5x\"></i>\r\n                    <span className=\"d-block\">Для вибору фото натисніть</span>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            {error && <div>{error}</div>}\r\n          </div>\r\n        </label>\r\n\r\n        <input\r\n          id={field}\r\n          className=\"d-none\"\r\n          type=\"file\"\r\n          onChange={handleImageChange}\r\n        />\r\n      </form>\r\n\r\n      {showModal && (\r\n        <Modal\r\n          onClose={() => {\r\n            setShowModal(false);\r\n          }}\r\n        >\r\n          <div className={classes.modalBody}>\r\n            <div className={classes.image}>\r\n              {\r\n                <img\r\n                  ref={imgRef as LegacyRef<HTMLImageElement>}\r\n                  src={value}\r\n                  alt=\"asdds\"\r\n                />\r\n              }\r\n            </div>\r\n            <div\r\n              ref={prevRef as LegacyRef<HTMLDivElement>}\r\n              style={{\r\n                height: \"150px\",\r\n                width: \"150px\",\r\n                border: \"1px solid silver\",\r\n                overflow: \"hidden\",\r\n              }}\r\n            ></div>\r\n            <div className=\"d-flex justify-content-around mt-2\">\r\n              <button\r\n                onClick={rotateImg}\r\n                type=\"button\"\r\n                className=\"btn btn-outline-secondary\"\r\n              >\r\n                <FontAwesomeIcon icon={faSync} size={\"2x\"} />\r\n              </button>\r\n              <div\r\n                className=\"d-flex justify-content-between\"\r\n                style={{ width: \"150px\" }}\r\n              >\r\n                <button\r\n                  onClick={getBase64}\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-success\"\r\n                >\r\n                  <FontAwesomeIcon icon={faCheckCircle} size={\"2x\"} />\r\n                </button>\r\n                <button\r\n                  onClick={() => {\r\n                    setShowModal(false);\r\n                  }}\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-danger\"\r\n                >\r\n                  <FontAwesomeIcon icon={faTimesCircle} size={\"2x\"} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CropperComponent;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBody\":\"CropperComponent_modalBody__2D_CS\",\"image\":\"CropperComponent_image__2KbH0\",\"formGroup\":\"CropperComponent_formGroup__31n-Q\",\"labelInput\":\"CropperComponent_labelInput__3e2Hl\",\"bgImg\":\"CropperComponent_bgImg__7A-8d\"};","import * as yup from \"yup\"\r\n\r\nexport const CreateCategorySchema = yup.object({\r\n  title: yup.string().required(\"Поле не повинне бути пустим\"),\r\n  urlSlug: yup.string().required(\"Поле не повинне бути пустим\"),\r\n  // image: yup.array().min(1, \"Виберіть аватар\").nullable(),\r\n  priority: yup.string().required(\"Поле не повинне бути пустим\"),\r\n});\r\n","import { useState } from 'react';\r\nimport InputGroup from '../../common/InputGroup';\r\nimport { useActions } from '../../../hooks/useActions';\r\nimport { useNavigate } from 'react-router';\r\nimport { CreateCategorySchema } from './validation';\r\nimport { ICreateCategory, ICreateCategoryError } from '../types/CreateCategory';\r\nimport { IStatus } from '../types';\r\nimport EclipseWidget from '../../common/eclipse';\r\nimport { Form, FormikHelpers, FormikProvider, useFormik } from 'formik';\r\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Card } from 'primereact/card';\r\nimport { Button } from 'primereact/button';\r\nimport CropperComponent from '../../containers/CropperComponent/CropperComponent';\r\n\r\nconst CreateCategory = () => {\r\n  const { CreateCategory, addFlashMessage, deleteFlashMessage } = useActions();\r\n  const { loading } = useTypedSelector((store) => store.userCrud);\r\n  const [load, setLoad] = useState<boolean>(false);\r\n  const navigator = useNavigate();\r\n  const initialValues: ICreateCategory = {\r\n    title: '',\r\n    priority: '',\r\n    urlSlug: '',\r\n    image: '',\r\n  };\r\n\r\n  // const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n  //   setFieldValue('image', (e.target as any).files[0]);\r\n  // };\r\n\r\n  const onHandleSubmit = async (\r\n    values: ICreateCategory,\r\n    { setFieldError }: FormikHelpers<ICreateCategory>,\r\n  ) => {\r\n    try {\r\n      setLoad(true);\r\n      const res = await CreateCategory(values);\r\n      console.log(res);\r\n\r\n      const result = (await res) as IStatus;\r\n      navigator('/adminPanel/categories/');\r\n      setLoad(false);\r\n      if (result.status === 200) {\r\n        addFlashMessage({\r\n          type: 'success',\r\n          message: 'Категорію створено',\r\n        });\r\n        setTimeout(() => deleteFlashMessage(), 2000);\r\n      }\r\n    } catch (err) {\r\n      setLoad(false);\r\n      const serverErrors = err as ICreateCategoryError;\r\n      const { title, priority } = serverErrors;\r\n      if (title?.length !== 0) setFieldError('title', title[0]);\r\n      if (priority?.length !== 0) setFieldError('priority', priority[0]);\r\n    }\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: initialValues,\r\n    validationSchema: CreateCategorySchema,\r\n    onSubmit: onHandleSubmit,\r\n  });\r\n\r\n  const { errors, touched, handleChange, handleSubmit, setFieldValue } = formik;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Додати категорію</title>\r\n      </Helmet>\r\n      <Card title=\"Додати категорію\">\r\n        <FormikProvider value={formik}>\r\n          <Form onSubmit={handleSubmit}>\r\n            <div className=\"row d-flex justify-content-around border border-secondary border-3 rounded-4 p-4 m-5\">\r\n              <div className=\"col-6\">\r\n                <CropperComponent\r\n                  field=\"image\"\r\n                  onChange={setFieldValue}\r\n                  error={errors.image}\r\n                  touched={touched.image}\r\n                />\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <InputGroup\r\n                  field=\"title\"\r\n                  label=\"Назва\"\r\n                  error={errors.title}\r\n                  onChange={handleChange}\r\n                  touched={touched.title}\r\n                />\r\n\r\n                <InputGroup\r\n                  field=\"priority\"\r\n                  label=\"Пріорітет\"\r\n                  error={errors.priority}\r\n                  onChange={handleChange}\r\n                  touched={touched.priority}\r\n                />\r\n\r\n                <InputGroup\r\n                  field=\"urlSlug\"\r\n                  label=\"urlSlug\"\r\n                  error={errors.urlSlug}\r\n                  onChange={handleChange}\r\n                  touched={touched.urlSlug}\r\n                />\r\n              </div>\r\n              \r\n                <div className=\"p-d-flex p-jc-center\">\r\n                  <Button \r\n                    type=\"submit\"\r\n                    label=\"Додати категорію\"\r\n                    icon=\"pi pi-plus\"\r\n                    disabled={loading}\r\n                  />\r\n                </div>\r\n             \r\n            </div>\r\n          </Form>\r\n        </FormikProvider>\r\n      </Card>\r\n      {load && <EclipseWidget />}\r\n    </>\r\n  );\r\n};\r\nexport default CreateCategory;\r\n"],"sourceRoot":""}